[2019-12-13T11:05:09.526] [ERROR] cheese - singUp@RegisterService {}
[2019-12-13T11:05:39.023] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"12336917062","origin":"DB","instance":{"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$IDNaxUeC2WzuRgUA/nEuEeWCMCYmAnqM.sIRZHjK1q.IfsWyKDQOW","iddocument":"12336917062","email":"juancholasso@hotmsail.com","telephone":3223737326,"updatedAt":"2019-12-13T16:05:38.679Z","createdAt":"2019-12-13T16:05:38.679Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"12336917062"},"parent":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"original":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"}
[2019-12-13T11:05:46.173] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"12336917062","origin":"DB","instance":{"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$uJ.wZKKQ4oarFKtx5z2TrOVdGYKtiPui4.ySh/lnDPJ1sMv/9QJ2O","iddocument":"12336917062","email":"juancholasso@hotmsail.dcom","telephone":3223737326,"updatedAt":"2019-12-13T16:05:45.848Z","createdAt":"2019-12-13T16:05:45.848Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"12336917062"},"parent":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"original":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"}
[2019-12-13T11:50:25.104] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iduser must be unique","type":"unique violation","path":"iduser","value":"1","origin":"DB","instance":{"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$RznA7slYwLYFC42hhNOAU.Ui.H/leYF9SyXI9uDZk2D8P1CJtnZky","iddocument":"123369172062","email":"juancholasso@hotmsasil.dcom","telephone":32237372326,"updatedAt":"2019-12-13T16:50:24.750Z","createdAt":"2019-12-13T16:50:24.750Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iduser":"1"},"parent":{"name":"error","length":184,"severity":"ERROR","code":"23505","detail":"Key (iduser)=(1) already exists.","schema":"public","table":"Users","constraint":"Users_pkey","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"original":{"name":"error","length":184,"severity":"ERROR","code":"23505","detail":"Key (iduser)=(1) already exists.","schema":"public","table":"Users","constraint":"Users_pkey","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"}
[2019-12-13T11:50:31.859] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"123369172062","origin":"DB","instance":{"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$QkfPcDT17L6VtzrJC2Ji6O9x9EraIAMLTMpwWTUm7/zkp9vFAOT0y","iddocument":"123369172062","email":"juancholasso@hotmsasil.dcom","telephone":322373723226,"updatedAt":"2019-12-13T16:50:31.507Z","createdAt":"2019-12-13T16:50:31.507Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"123369172062"},"parent":{"name":"error","length":219,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123369172062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"original":{"name":"error","length":219,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123369172062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"password\",\"name\",\"lastname\",\"email\",\"telephone\",\"iddocument\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8) RETURNING *;"}
[2019-12-19T17:13:01.864] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"12336917062","origin":"DB","instance":{"image":null,"token":null,"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$MbbCnEQMP8.tbKqeHznEDeY240iT0Du5zsllYUrWCYBy1qPSJj9oi","iddocument":"12336917062","email":"juancholasso@hotmail.com","telephone":3223737326,"updatedAt":"2019-12-19T22:13:01.512Z","createdAt":"2019-12-19T22:13:01.512Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"12336917062"},"parent":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING *;"},"original":{"name":"error","length":218,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(12336917062) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"534","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING *;"}
[2019-12-20T22:57:42.027] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T22:58:14.703] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T22:58:44.007] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T22:58:47.096] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:00:13.243] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:00:19.723] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:00:20.869] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:00:54.758] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:00:57.074] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:01:03.514] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:01:12.975] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:03:36.787] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:03:37.690] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:03:38.458] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-20T23:08:47.592] [ERROR] cheese - uploadPhoto@UserService {}
[2019-12-20T23:09:34.055] [ERROR] cheese - uploadPhoto@UserService {}
[2019-12-20T23:10:11.310] [ERROR] cheese - uploadPhoto@UserService {}
[2019-12-20T23:22:58.720] [ERROR] cheese - getPhotoProfile@UserService {}
[2019-12-21T12:25:59.368] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2019-12-21T12:26:22.027] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2019-12-21T12:26:23.059] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2019-12-21T12:27:12.701] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2019-12-21T12:29:43.888] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2019-12-21T12:30:17.632] [ERROR] cheese - uploadPhoto@UserService {"code":"ERR_INVALID_ARG_TYPE"}
[2020-08-08T15:53:08.528] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":112,"severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1194","routine":"parserOpenTable","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":112,"severity":"ERROR","code":"42P01","position":"13","file":"parse_relation.c","line":"1194","routine":"parserOpenTable","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeDatabaseError: relation "PlaylistSongs" does not exist
[2020-08-09T13:19:32.309] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T13:19:39.896] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T13:45:43.817] [ERROR] cheese - getPlaylist@PlaylistService {}Error: WHERE parameter "idplaylist" has invalid "undefined" value
[2020-08-09T13:45:57.764] [ERROR] cheese - getPlaylist@PlaylistService {}Error: WHERE parameter "idplaylist" has invalid "undefined" value
[2020-08-09T13:46:52.980] [ERROR] cheese - getPlaylist@PlaylistService {}Error: WHERE parameter "idplaylist" has invalid "undefined" value
[2020-08-09T14:10:25.433] [ERROR] cheese - createPlaylist@PlaylistService {"name":"SequelizeValidationError","errors":[{"message":"Playlist.name cannot be null","type":"notNull Violation","path":"name","value":null,"origin":"CORE","instance":{"idplaylist":null,"iduser":1,"updatedAt":"2020-08-09T19:10:25.337Z","createdAt":"2020-08-09T19:10:25.337Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
[2020-08-09T14:11:35.123] [ERROR] cheese - createPlaylist@PlaylistService {"name":"SequelizeValidationError","errors":[{"message":"Playlist.name cannot be null","type":"notNull Violation","path":"name","value":null,"origin":"CORE","instance":{"idplaylist":null,"iduser":1,"updatedAt":"2020-08-09T19:11:35.027Z","createdAt":"2020-08-09T19:11:35.027Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
[2020-08-09T14:41:14.882] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T14:41:40.822] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T14:42:26.682] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T14:43:04.636] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"original":{"name":"error","length":109,"severity":"ERROR","code":"22P02","position":"737","file":"numutils.c","line":"259","routine":"pg_strtoint32","sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"},"sql":"SELECT \"Playlist\".*, \"songs\".\"idmusic\" AS \"songs.idmusic\", \"songs\".\"iduser\" AS \"songs.iduser\", \"songs\".\"name\" AS \"songs.name\", \"songs\".\"url\" AS \"songs.url\", \"songs\".\"createdAt\" AS \"songs.createdAt\", \"songs\".\"updatedAt\" AS \"songs.updatedAt\", \"songs->PlaylistSongs\".\"createdAt\" AS \"songs.PlaylistSongs.createdAt\", \"songs->PlaylistSongs\".\"updatedAt\" AS \"songs.PlaylistSongs.updatedAt\", \"songs->PlaylistSongs\".\"idplaylist\" AS \"songs.PlaylistSongs.idplaylist\", \"songs->PlaylistSongs\".\"idsong\" AS \"songs.PlaylistSongs.idsong\" FROM (SELECT \"Playlist\".\"idplaylist\", \"Playlist\".\"iduser\", \"Playlist\".\"name\", \"Playlist\".\"createdAt\", \"Playlist\".\"updatedAt\" FROM \"Playlists\" AS \"Playlist\" WHERE \"Playlist\".\"iduser\" = 1 AND \"Playlist\".\"idplaylist\" = 'NaN' LIMIT 10 OFFSET 0) AS \"Playlist\" LEFT OUTER JOIN ( \"PlaylistSongs\" AS \"songs->PlaylistSongs\" INNER JOIN \"Songs\" AS \"songs\" ON \"songs\".\"idmusic\" = \"songs->PlaylistSongs\".\"idsong\") ON \"Playlist\".\"idplaylist\" = \"songs->PlaylistSongs\".\"idplaylist\";"}
[2020-08-09T15:15:35.717] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeValidationError","errors":[{"message":"PlaylistSongs.idplaylist cannot be null","type":"notNull Violation","path":"idplaylist","value":null,"origin":"CORE","instance":{"idplaylist":null,"idsong":null,"updatedAt":"2020-08-09T20:15:35.711Z","createdAt":"2020-08-09T20:15:35.711Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"PlaylistSongs.idsong cannot be null","type":"notNull Violation","path":"idsong","value":null,"origin":"CORE","instance":{"idplaylist":null,"idsong":null,"updatedAt":"2020-08-09T20:15:35.711Z","createdAt":"2020-08-09T20:15:35.711Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}SequelizeValidationError: notNull Violation: PlaylistSongs.idplaylist cannot be null,
notNull Violation: PlaylistSongs.idsong cannot be null
[2020-08-09T15:16:33.638] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeValidationError","errors":[{"message":"PlaylistSongs.idsong cannot be null","type":"notNull Violation","path":"idsong","value":null,"origin":"CORE","instance":{"idsong":null,"idplaylist":3,"updatedAt":"2020-08-09T20:16:33.632Z","createdAt":"2020-08-09T20:16:33.632Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}SequelizeValidationError: notNull Violation: PlaylistSongs.idsong cannot be null
[2020-08-09T15:17:04.606] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeValidationError","errors":[{"message":"PlaylistSongs.idsong cannot be null","type":"notNull Violation","path":"idsong","value":null,"origin":"CORE","instance":{"idsong":null,"idplaylist":3,"updatedAt":"2020-08-09T20:17:04.601Z","createdAt":"2020-08-09T20:17:04.601Z"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}SequelizeValidationError: notNull Violation: PlaylistSongs.idsong cannot be null
[2020-08-09T15:18:24.093] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:18:24.003Z","createdAt":"2020-08-09T20:18:24.003Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:18:24.003Z","createdAt":"2020-08-09T20:18:24.003Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"3"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T15:18:37.109] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:18:37.013Z","createdAt":"2020-08-09T20:18:37.013Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:18:37.013Z","createdAt":"2020-08-09T20:18:37.013Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"3"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T15:24:35.387] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":8,"updatedAt":"2020-08-09T20:24:35.286Z","createdAt":"2020-08-09T20:24:35.286Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"8","origin":"DB","instance":{"idplaylist":3,"idsong":8,"updatedAt":"2020-08-09T20:24:35.286Z","createdAt":"2020-08-09T20:24:35.286Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"8"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 8) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 8) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T15:24:38.900] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":8,"updatedAt":"2020-08-09T20:24:38.808Z","createdAt":"2020-08-09T20:24:38.808Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"8","origin":"DB","instance":{"idplaylist":3,"idsong":8,"updatedAt":"2020-08-09T20:24:38.808Z","createdAt":"2020-08-09T20:24:38.808Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"8"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 8) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 8) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T15:26:22.060] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:26:21.955Z","createdAt":"2020-08-09T20:26:21.955Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:26:21.955Z","createdAt":"2020-08-09T20:26:21.955Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"3"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T15:26:24.632] [ERROR] cheese - getPlaylist@PlaylistService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"idplaylist must be unique","type":"unique violation","path":"idplaylist","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:26:24.548Z","createdAt":"2020-08-09T20:26:24.548Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]},{"message":"idsong must be unique","type":"unique violation","path":"idsong","value":"3","origin":"DB","instance":{"idplaylist":3,"idsong":3,"updatedAt":"2020-08-09T20:26:24.548Z","createdAt":"2020-08-09T20:26:24.548Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"idplaylist":"3","idsong":"3"},"parent":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"original":{"name":"error","length":223,"severity":"ERROR","code":"23505","detail":"Key (idplaylist, idsong)=(3, 3) already exists.","schema":"public","table":"PlaylistSongs","constraint":"PlaylistSongs_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"},"sql":"INSERT INTO \"PlaylistSongs\" (\"idplaylist\",\"idsong\",\"createdAt\",\"updatedAt\") VALUES ($1,$2,$3,$4) RETURNING *;"}SequelizeUniqueConstraintError: Validation error
[2020-08-09T16:45:13.379] [ERROR] cheese - getSongs@SongService {"name":"SequelizeDatabaseError","parent":{"name":"error","length":106,"severity":"ERROR","code":"42703","position":"53","file":"parse_relation.c","line":"3359","routine":"errorMissingColumn","sql":"UPDATE \"Songs\" SET \"iduser\"=$1,\"updatedAt\"=$2 WHERE \"idsong\" = $3"},"original":{"name":"error","length":106,"severity":"ERROR","code":"42703","position":"53","file":"parse_relation.c","line":"3359","routine":"errorMissingColumn","sql":"UPDATE \"Songs\" SET \"iduser\"=$1,\"updatedAt\"=$2 WHERE \"idsong\" = $3"},"sql":"UPDATE \"Songs\" SET \"iduser\"=$1,\"updatedAt\"=$2 WHERE \"idsong\" = $3"}
[2020-08-09T17:47:39.695] [ERROR] cheese - removeSongToPlaylist@PlaylistService {}Error: WHERE parameter "idplaylist" has invalid "undefined" value
[2020-08-09T17:48:36.439] [ERROR] cheese - createSong@SongService {}
[2020-08-09T17:49:57.702] [ERROR] cheese - createSong@SongService {}
[2020-08-09T17:50:03.415] [ERROR] cheese - createSong@SongService {}
[2020-08-09T18:07:28.435] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iduser must be unique","type":"unique violation","path":"iduser","value":"1","origin":"DB","instance":{"image":null,"token":null,"iduser":null,"name":"Juan Pablo","lastname":"Camargo Lasso","password":"$2b$10$SN.z4/LErFCq/i5Yx5l6qe/55WzT9PdcVJA7XsJY6lkjnRdDlVZOm","iddocument":"12332629221","email":"juancholassossss@hotmail.com","telephone":3223737326,"nickname":"ju2ancholassosos","updatedAt":"2020-08-09T23:07:28.166Z","createdAt":"2020-08-09T23:07:28.166Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iduser":"1"},"parent":{"name":"error","length":184,"severity":"ERROR","code":"23505","detail":"Key (iduser)=(1) already exists.","schema":"public","table":"Users","constraint":"Users_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"original":{"name":"error","length":184,"severity":"ERROR","code":"23505","detail":"Key (iduser)=(1) already exists.","schema":"public","table":"Users","constraint":"Users_pkey","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"}
[2020-08-09T18:18:23.179] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"123213","origin":"DB","instance":{"image":null,"token":null,"iduser":null,"name":"Juan","lastname":"Camarg","password":"$2b$10$sBJdthuzOT2ybsMyD8MkVubW2eAsnyYXbsG.xN3E.G.0zzmpl6sbK","iddocument":123213,"email":"juancholasso@hotmail.com","telephone":123123,"nickname":"jaj","updatedAt":"2020-08-09T23:18:22.923Z","createdAt":"2020-08-09T23:18:22.923Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"123213"},"parent":{"name":"error","length":213,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123213) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"original":{"name":"error","length":213,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123213) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"}
[2020-08-09T18:19:17.679] [ERROR] cheese - singUp@RegisterService {"name":"SequelizeUniqueConstraintError","errors":[{"message":"iddocument must be unique","type":"unique violation","path":"iddocument","value":"123213","origin":"DB","instance":{"image":null,"token":null,"iduser":null,"name":"Juan","lastname":"Camarg","password":"$2b$10$2ctyLLSl7iBwp4o0kVGLA.fqjeix87Vq49p5J27.HJGjsPQCKNT26","iddocument":123213,"email":"juancholasso@hotmail.com","telephone":123123,"nickname":"jaj","updatedAt":"2020-08-09T23:19:17.431Z","createdAt":"2020-08-09T23:19:17.431Z"},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"fields":{"iddocument":"123213"},"parent":{"name":"error","length":213,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123213) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"original":{"name":"error","length":213,"severity":"ERROR","code":"23505","detail":"Key (iddocument)=(123213) already exists.","schema":"public","table":"Users","constraint":"Users_iddocument_key","file":"nbtinsert.c","line":"570","routine":"_bt_check_unique","sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"},"sql":"INSERT INTO \"Users\" (\"iduser\",\"iddocument\",\"name\",\"lastname\",\"telephone\",\"image\",\"email\",\"password\",\"token\",\"nickname\",\"createdAt\",\"updatedAt\") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING *;"}
[2020-08-09T18:21:24.052] [ERROR] cheese - singUp@RegisterService {}
[2020-08-09T18:21:25.863] [ERROR] cheese - singUp@RegisterService {}
